st_is_valid(water_combined, reason = TRUE)
water_combined<- st_make_valid(water_combined)
st_is_valid(water_combined, reason = TRUE)
#water2_mp %>% st_buffer(0)
total_water <- st_union(water_combined)
total_water <- as(total_water, 'Spatial')
total_water <- gIntersection(my_box, total_water)
#convert back to sf
total_water <- st_as_sf(total_water)
#create map
#map  <-
ggplot() +
geom_sf(data = small_streets,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = 1) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .5,
alpha = 1) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "#6e6e6e",
size = .05,
alpha = 1) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "#3b3b3b",
size = .8,
alpha = 1) +
geom_sf(data = total_water,
inherit.aes = FALSE,
fill = 'black',
color = "black",
size = .05,
alpha = 1) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()
#create map
#map  <-
ggplot() +
geom_sf(data = small_streets,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = 1) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .5,
alpha = 1) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "#6e6e6e",
size = .05,
alpha = 1) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .5,
alpha = 1) +
geom_sf(data = total_water,
inherit.aes = FALSE,
fill = '#B3CCD9',
color = "white",
size = .1,
alpha = 1) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()
#create map
#map  <-
ggplot() +
geom_sf(data = total_water,
inherit.aes = FALSE,
fill = '#233036',
color = "white",
size = .1,
alpha = 1) +
geom_sf(data = small_streets,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = 1) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "#cccccc",
size = .05,
alpha = 1) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()
#create map
map  <-
ggplot() +
geom_sf(data = total_water,
inherit.aes = FALSE,
fill = '#233036',
color = "white",
size = .1,
alpha = 1) +
geom_sf(data = small_streets,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = 1) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "#cccccc",
size = .05,
alpha = 1) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()
setwd(save.location)
ggsave(filename=(paste(city_name,".png", sep="", collapse=NULL)), plot=map, device="png",
path="./", height=11, width=8.5, units="in", dpi=300)
city = "DUBLIN"
country = "IRELAND"
zoom.level = 5
save.location <- 'C:/Users/Ari/Documents/GitHub/OSM-Print-Map-Generator/prints'
city_name <- (paste(city,",", country, sep="", collapse=NULL))
zoom= 1/zoom.level
#gets OMS-defined centroid by city_ name
dat <- getbb(city_name, format_out ="data.frame", limit = 1)
dat <- dat[,c("lat","lon")]
#converts centroid into coordinates for bounding box
cols.num <- c("lat","lon")
dat[cols.num] <- sapply(dat[cols.num],as.numeric)
n = (dat$lat + (zoom*1.05))
s = (dat$lat - (zoom*1.05))
w = (dat$lon + zoom)
e = (dat$lon - zoom)
#make bounding box
CRS <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"
my_box <- rgeos::bbox2SP(n, s, w, e,
proj4string = CRS(CRS))
my_box_sf <- st_as_sf(my_box)
#pulling data
big_streets <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link")) %>%
osmdata_sf()
med_streets <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "highway",
value = c("secondary", "tertiary", "secondary_link", "tertiary_link")) %>%
osmdata_sf()
small_streets <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "highway",
value = c("residential", "living_street",
"unclassified",
"service"
)) %>%
osmdata_sf()
small_streets <- small_streets$osm_lines
small_streets <- small_streets[c("name","geometry")]
railway <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "railway", value="rail") %>%
osmdata_sf()
railway <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "railway", value="rail") %>%
osmdata_sf()
library(rgeos)
#pull water for plot
water1 <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "waterway",
value = c("riverbank"
)) %>%
osmdata_sf()
water1_p <- water1$osm_polygons
water1_mp <- water1$osm_multipolygons
water2 <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "water",
value = c("river", "lake"
)) %>%
osmdata_sf()
water2_p <- water2$osm_polygons
water2_mp <- water2$osm_multipolygons
water3 <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "natural",
value = c("bay"
)) %>%
osmdata_sf()
water3_p <- water3$osm_polygons
water3_mp <- water3$osm_multipolygons
water4 <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "landuse",
value = c("resevoir"
)) %>%
osmdata_sf()
water4_p <- water4$osm_polygons
water4_mp <- water4$osm_multipolygons
#remove all columns except geometry
reqd <- "geometry"
water1_p <- water1_p[,reqd]
water1_mp <- water1_mp[,reqd]
water2_p <- water2_p[,reqd]
water2_mp <- water2_mp[,reqd]
water3_p <- water3_p[,reqd]
water3_mp <- water3_mp[,reqd]
water4_p <- water4_p[,reqd]
water4_mp <- water4_mp[,reqd]
#combine all water features
water_combined <- rbind(water1_p, water1_mp, water2_p, water2_mp, water3_p, water3_mp,water4_p, water4_mp)
#check geometries and make valid
st_is_valid(water_combined, reason = TRUE)
water_combined<- st_make_valid(water_combined)
st_is_valid(water_combined, reason = TRUE)
#water2_mp %>% st_buffer(0)
total_water <- st_union(water_combined)
total_water <- as(total_water, 'Spatial')
total_water <- gIntersection(my_box, total_water)
#convert back to sf
total_water <- st_as_sf(total_water)
#create map
map  <-
ggplot() +
geom_sf(data = total_water,
inherit.aes = FALSE,
fill = '#233036',
color = "white",
size = .1,
alpha = 1) +
geom_sf(data = small_streets,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = 1) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "#cccccc",
size = .05,
alpha = 1) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()
ggtitle(city, subtitle = country)
#create map
map  <-
ggplot() +
geom_sf(data = total_water,
inherit.aes = FALSE,
fill = '#233036',
color = "white",
size = .1,
alpha = 1) +
geom_sf(data = small_streets,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = 1) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "#cccccc",
size = .05,
alpha = 1) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()
map
coastline <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "natural",
value = c("coastline"
)) %>%
osmdata_sf()
plot(coastline$osm_lines)
coastline <- coastline$osm_lines
plot(coastline)
plot(coastline$geometry)
#create map
map  <-
ggplot() +
geom_sf(data = total_water,
inherit.aes = FALSE,
fill = '#233036',
color = "white",
size = .1,
alpha = 1) +
geom_sf(data = small_streets,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = 1) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "#cccccc",
size = .05,
alpha = 1) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
geom_sf(data = coastline,
inherit.aes = FALSE,
color = "#919191",
size = .65,
alpha = 1) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()
map
plot(coastline, my_box)
plot(coastline$geometry, my_box)
plot(coastline$geometry)
plot(coastline$geometry, my_box_sf)
plot(my_box_sf)
plot(coastline, add =T)
plot(coastline$geometry, add =T)
plot(my_box)
plot(coastline, add = T)
plot(coastline$geometry, add = T)
split <- gIntersection(my_box, coastline)               # intersect your line with the polygon
coastline <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "natural", value = c("coastline"))
coastline <- osmdata_sp(coastline, quiet = TRUE)
coastline <- coastline$osm_lines
split <- gIntersection(my_box, coastline)               # intersect your line with the polygon
coastal_buf <- gBuffer(split, width = 0.0001)        # create a very thin polygon buffer of the intersected line
ocean <- gDifference(my_box, coastal_buf)
plot(ocean, add= T)
View(coastline)
View(coastal_buf)
split <- gIntersection(my_box, coastline)               # intersect your line with the polygon
coastal_buf <- gBuffer(split, width = 0.01)        # create a very thin polygon buffer of the intersected line
ocean <- gDifference(my_box, coastal_buf)
plot(ocean, add= T)
coastline <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "natural", value = c("coastline"))
coastline <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "natural", value = c("coastline"))%>%
osmdata_sf (quiet = FALSE)
coastline
plot(my_box)
plot(coastline$geometry, add = T)
plot(my_box)
plot(coastline, add = T)
plot(coastline$osm_lines, add = T)
coast_poly <- osm_line2poly (coastline$osm_lines, my_box)
install.packages('osmplottr')
library(osmplottr)
install.packages('osmplotr')
library(osmplotr)
coast_poly <- osm_line2poly (coastline$osm_lines, my_box)
coast_poly <- osm_line2poly (coastline$osm_lines, my_box)
coastline
test_plot <- function (bbox)
{
dat <- opq (bbox) %>%
add_osm_feature (key = "natural", value = "coastline") %>%
osmdata_sf (quiet = FALSE)
coast <- osm_line2poly (dat$osm_lines, bbox)
osm_basemap (bbox = bbox) %>%
add_osm_objects(coast$sea, col = 'cadetblue2') %>%
add_osm_objects(coast$land, col = 'sienna2')
}
plot(test_plot)
test_plot <- function (bbox)
{
dat <- opq (bbox) %>%
add_osm_feature (key = "natural", value = "coastline") %>%
osmdata_sf (quiet = FALSE)
coast <- osm_line2poly (dat$osm_lines, bbox)
osm_basemap (bbox = bbox) %>%
add_osm_objects(coast$sea, col = 'cadetblue2') %>%
add_osm_objects(coast$land, col = 'sienna2')
}
bbox <- osmdata::getbb ("greater melbourne, australia")
coast <- opq (bbox = bbox) %>%
add_osm_feature (key = "natural", value = "coastline") %>%
osmdata_sf (quiet = FALSE)
coast
plot(bbox)
plot(coast$osm_lines, add= T)
plot(bbox)
View(coast)
plot(coast$osm_lines, add= T)
View(coastline)
coast <- opq (bbox = bbox) %>%
add_osm_feature (key = "natural", value = "coastline") %>%
osmdata_sf (quiet = T)
plot(bbox)
plot(coast$, add= T)
plot(coast$osm_lines, add= T)
coast <- coast$osm_lines
coast
plot(coast$geometry, add= T)
plot(bbox)
View(coast)
plot(coast$geometry)
plot(bbox, add= T)
plot(coast$geometry)
plot(coast$geometry)
plot(bbox, add= T)
plot(bbox)
plot(coast$geometry, add = T)
bbox <- osmdata::getbb ("greater melbourne, australia")
coast <- opq (bbox = bbox) %>%
add_osm_feature (key = "natural", value = "coastline") %>%
osmdata_sf (quiet = T)
coast_poly <- osm_line2poly (coast$osm_lines, bbox)
bbox <- osmdata::getbb ("miami")
coast <- opq (bbox = bbox) %>%
add_osm_feature (key = "natural", value = "coastline") %>%
osmdata_sf (quiet = T)
mapview::mapview(bbox)
mapview::mapview(bbox)
city = "Miami"
country = "Florida"
zoom.level = 50
city_name <- (paste(city,",", country, sep="", collapse=NULL))
zoom= 1/zoom.level
#gets OMS-defined centroid by city_ name
dat <- getbb(city_name, format_out ="data.frame", limit = 1)
dat <- dat[,c("lat","lon")]
#converts centroid into coordinates for bounding box
cols.num <- c("lat","lon")
dat[cols.num] <- sapply(dat[cols.num],as.numeric)
n = (dat$lat + (zoom*1.05))
s = (dat$lat - (zoom*1.05))
w = (dat$lon + zoom)
e = (dat$lon - zoom)
#make bounding box
CRS <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"
my_box <- rgeos::bbox2SP(n, s, w, e,
proj4string = CRS(CRS))
my_box_sf <- st_as_sf(my_box)
mapview::mapview(my_box)
coast <- opq (bbox = my_box) %>%
add_osm_feature (key = "natural", value = "coastline") %>%
osmdata_sf (quiet = T)
View(bbox)
coastline <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "natural", value = c("coastline"))
coastline
coastline <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "natural", value = c("coastline"))
coastline
View(coastline)
coastline$features
library(osmdata)
library(ggmap)
library(sf)
library(sp)
city = "Miami"
country = "Florida"
zoom.level = 50
