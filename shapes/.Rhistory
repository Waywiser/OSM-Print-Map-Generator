pattern = 'blue',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_bw(15)
#plot map
p
orange<- c("https://www.achildsplacepa.org/wp-content/uploads/2018/12/GettyImages-986491786.jpg")
peach<- c("https://media1.thehungryjpeg.com/thumbs2/ori_3503830_c5c37d89f20dcbb582caab4663617214d8b1914a_watercolor-digital-paper-watercolor-background-watercolor-texture.jpg")
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'blue',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_bw(15)
#plot map
p
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_bw(15)
#plot map
p
streets <- st_as_sf(split_buf)
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_bw(15)
#plot map
p
View(streets)
View(blocks)
View(streets)
plot(streets)
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_bxw(15)
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_bw(15)
#plot map
p
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_bw(15)
#plot map
p
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
#plot map
p
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
streets$id <- 1
View(streets)
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
streets
blocks
streets <- streets[,c("id","geometry")]
streets
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
blocks
streets
blocks
streets <- SpatialPolygonsDataFrame(split_buf,data=as.data.frame("streets_df"))
streets <- SpatialPolygonsDataFrame(split_buf,data=as.data.frame("split_buf"))
View(split_buf)
plot(split_buf)
ms_dissolve(streets)
streets <- ms_dissolve(streets)
View(streets)
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
streets
blocks
View(split_buf)
View(streets)
View(streets[[2]][[1]])
View(blocks)
View(blocks[[2]][[1]])
streets <- do.call("rbind", streets)
View(streets)
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
streets <- st_as_sf(streets)
streets <- st_as_sf(split_buf)
View(streets)
View(streets[[1]][[1]])
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
View(streets[[1]][[1]])
install.packages('mapedit')
mapedit:::combine_list_of_sf(streets)
mapedit:::combine_list_of_sf(streets$geometry)
View(streets[[1]][[1]])
library(rgdal)
setwd('/Users/mac/Desktop/waywiser/OSM-Print-Map-Generator/data')
setwd('/Users/mac/Desktop/waywiser/OSM-Print-Map-Generator/shapes')
writeOGR(obj=streets, dsn="./", layer="streets", driver="ESRI Shapefile")
View(streets)
streets <- st_as_sf(split_buf)
writeOGR(obj=streets, dsn="./", layer="streets", driver="ESRI Shapefile")
streets <- SpatialPolygonsDataFrame(split_buf,data=as.data.frame("split_buf"))
plot(streets)
plot(split_buf)
writeOGR(obj=split_buf, dsn="./", layer="split_buf", driver="ESRI Shapefile")
streets <- SpatialPolygonsDataFrame(split_buf, data=as.data.frame("split_buf"))
split_buf <- gBuffer(split, width = 0.0001)        # create a very thin polygon buffer of the intersected line
streets <- SpatialPolygonsDataFrame(split_buf, data=as.data.frame("split_buf"))
writeOGR(obj=split_buf, dsn="./", laxyer="split_buf", driver="ESRI Shapefile")
writeOGR(obj=split_buf, dsn="./", layer="split_buf", driver="ESRI Shapefile")
streets <- SpatialPolygonsDataFrame(split_buf, data=as.data.frame("split_buf"))
streets <- SpatialPolygonsDataFrame(split_buf, data=as.data.frame("split_buf"), match.ID = F)
plot(streets)
plot(streets)
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
View(streets)
streets <- st_as_sf(streets)
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
#pull streets for blocks
streets <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "highway", value = c("motorway","primary", "secondary", "tertiary", "residential"))
streets <- osmdata_sp(streets, quiet = TRUE)
streets <- streets$osm_lines
plot(streets)
split <- gIntersection(my_box, streets)               # intersect your line with the polygon
split_buf <- gBuffer(split, width = 0.0001, byid = TRUE)        # create a very thin polygon buffer of the intersected line
plot(streets)
plot(split_buf)
#make plot
p <- ggplot(split_buf) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
streets <- st_as_sf(split_buf)
View(streets)
View(streets[[1]][[1]])
#make plot
p <- ggplot(streets) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
View(streets)
View(streets[[1]][[1]])
streets[[2]] <- NULL
View(streets)
View(streets[[1]][[1]])
View(streets)
View(streets[[1]][[1]])
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
#plot map
p+p
#plot map
p
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
)
#plot map
p
#make plot
p <- ggplot(blocks) +
geom_sf_pattern(
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
small_streets <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "highway",
value = c("residential", "living_street",
"unclassified",
"service", "footway"
)) %>%
osmdata_sf()
#make plot
p <- ggplot() +
geom_sf_pattern(
data = blocks,
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
theme_void()
#plot map
p
#make plot
p <- ggplot() +
geom_sf_pattern(
data = blocks,
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = .8) +
theme_void()
#plot map
p
#pull streets for plot
small_streets <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link",
"secondary", "tertiary", "secondary_link", "tertiary_link",
"residential", "living_street", "unclassified","service"
)) %>%
osmdata_sf()
#make plot
p <- ggplot() +
geom_sf_pattern(
data = blocks,
inherit.aes = FALSE,
pattern = 'image',
pattern_type = 'squish',
pattern_filename = orange
) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#cccccc",
size = .25,
alpha = .8) +
theme_void()
#plot map
p
plot(my_box_sf)
plot(my_box, add = T)
#pull streets for plot
small_streets <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link",
"secondary", "tertiary", "secondary_link", "tertiary_link",
"residential", "living_street", "unclassified","service"
)) %>%
osmdata_sf()
plot(small_streets)
plot(small_streets$osm_lines)
gc()
#pull streets for blocks
streets <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "highway", value = c("motorway","primary", "secondary", "tertiary", "residential"))
streets <- osmdata_sp(streets, quiet = TRUE)
streets <- streets$osm_lines
#pull streets for plot
small_streets <- my_box_sf %>%
opq()%>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link",
"secondary", "tertiary", "secondary_link", "tertiary_link",
"residential", "living_street", "unclassified","service"
)) %>%
osmdata_sf()
#check plots
plot(my_box)
plot(streets, add = T, col = 'black', lwd = 2)
#convert streets to polygons and take difference
split <- gIntersection(my_box, streets)               # intersect your line with the polygon
plot(split, add = T, col = 'black', lwd = 2)
#check plots
plot(my_box)
plot(split, add = T, col = 'black', lwd = 2)
#convert streets to polygons and take difference
split <- gIntersection(my_box, streets)               # intersect your line with the polygon
split_buf <- gBuffer(split, width = 0.0001)        # create a very thin polygon buffer of the intersected line
plot(blocks)
#build map
map <- ggplot() +
geom_sf(data = blocks_sf, fill = blocks_sf$color, alpha = .8)+
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "white",
size = .9,
alpha = .9) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()+
ggtitle(title, subtitle = subtitle)
#convert streets to polygons and take difference
split <- gIntersection(my_box, streets)               # intersect your line with the polygon
split_buf <- gBuffer(split, width = 0.0001)        # create a very thin polygon buffer of the intersected line
blocks <- gDifference(my_box, split_buf)                 # split using gDifference
#convert to spdf and to single polygons
blocks <- SpatialPolygonsDataFrame(blocks,data=as.data.frame("blocks_df"))
blocks<- ms_explode(blocks)
#random colors
blocks$color <- sample(c(color), size = nrow(blocks), replace = TRUE)
#check plots again
plot(blocks, col = blocks$color, border="NA")
#check plots again
plot(blocks, col = blocks$color, border="NA")
plot(streets, lwd = .8, col = 'white', add = T)
#convert to ggplot readable
blocks_sf <- st_as_sf(blocks)
crs(streets) <- "+proj=longlat +datum=WGS84 +no_defs"
mapview(streets)
#build map
map <- ggplot() +
geom_sf(data = blocks_sf, fill = blocks_sf$color, alpha = .8)+
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "white",
size = .9,
alpha = .9) +
coord_sf(xlim = c(e, w),
ylim = c(s + (zoom/6), n - (zoom/6)),
expand = FALSE)+
theme_void()+
ggtitle(title, subtitle = subtitle)
map
library(ggplot2)
library(ggpattern)
#inputs
title = "GREAT BEND"
subtitle = "KANSAS"
city_name <- (paste(title,",", subtitle, sep="", collapse=NULL))
zoom = 100
orange<- c("https://www.achildsplacepa.org/wp-content/uploads/2018/12/GettyImages-986491786.jpg")
color = orange
#gets OMS-defined centroid by city_ name
dat <- getbb(city_name, format_out ="data.frame", limit = 1)
dat <- dat[,c("lat","lon")]
#converts centroid into coordinates for bounding box
cols.num <- c("lat","lon")
dat[cols.num] <- sapply(dat[cols.num],as.numeric)
n = (dat$lat + (zoom*1.05))
s = (dat$lat - (zoom*1.05))
w = (dat$lon + zoom)
e = (dat$lon - zoom)
#make bounding box
CRS <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"
my_box <- rgeos::bbox2SP(n, s, w, e,
proj4string = CRS(CRS))
my_box_sf <- st_as_sf(my_box)
#pull streets for blocks
streets <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "highway", value = c("motorway","primary", "secondary", "tertiary", "residential"))
streets <- osmdata_sp(streets, quiet = TRUE)
streets <- streets$osm_lines
#check plots
plot(my_box)
plot(streets, add = T, col = 'black', lwd = 2)
#pull streets for blocks
streets <- opq(bbox = c((dat$lon - zoom), (dat$lat - zoom*1.05), (dat$lon + zoom), (dat$lat + zoom*1.05)))%>%
add_osm_feature(key = "highway", value = c("motorway","primary", "secondary", "tertiary", "residential"))
streets <- osmdata_sp(streets, quiet = TRUE)
